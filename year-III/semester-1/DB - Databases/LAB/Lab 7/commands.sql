-- A
SELECT EXTRACT(YEAR FROM SIGNUP.YEAR) AS YEAR, COUNT(*) AS NUM_OF_STUDENTS
FROM SIGNUP
GROUP BY EXTRACT(YEAR FROM SIGNUP.YEAR)

-- B
SELECT EXTRACT(YEAR FROM SIGNUP.YEAR) AS YEAR, DEPARTMENT.FACULTY, DEPARTMENT.ID, COUNT(*) AS NUM_OF_STUDENTS
FROM SIGNUP
INNER JOIN STUDENT ON SIGNUP.STUDENT_ID = STUDENT.ID
INNER JOIN DEPARTMENT ON STUDENT.DEPARTMENT = DEPARTMENT.ID
GROUP BY EXTRACT(YEAR FROM SIGNUP.YEAR), DEPARTMENT.FACULTY, DEPARTMENT.ID

-- C
SELECT STUDENT.NAME || ' ' || STUDENT.SURNAME AS STUDENT, STUDENT.ID, COURSE.NAME, AVG(GRADE.VALUE) AS AVG_GRADE
FROM STUDENT
INNER JOIN SIGNUP ON STUDENT.ID = SIGNUP.STUDENT_ID
INNER JOIN COURSE ON SIGNUP.COURSE_ID = COURSE.ID
INNER JOIN GRADE ON SIGNUP.ID = GRADE.SIGNUP_ID
WHERE GRADE.ELP IN ('L', 'P')
GROUP BY STUDENT.NAME || ' ' || STUDENT.SURNAME, STUDENT.ID, COURSE.NAME

-- D
SELECT COURSE.NAME, AVG(GRADE.VALUE) AS AVG_GRADE
FROM GRADE
INNER JOIN SIGNUP ON GRADE.SIGNUP_ID = SIGNUP.ID
INNER JOIN STUDENT ON SIGNUP.STUDENT_ID = STUDENT.ID
INNER JOIN COURSE ON SIGNUP.COURSE_ID = COURSE.ID
WHERE GRADE.ELP = 'L' AND COURSE.NAME = 'Programming'
GROUP BY COURSE.NAME

-- E
SELECT DEPARTMENT.ID, DEPARTMENT.FACULTY
FROM DEPARTMENT
INNER JOIN STUDENT ON DEPARTMENT.ID = STUDENT.DEPARTMENT
INNER JOIN SIGNUP ON STUDENT.ID = SIGNUP.STUDENT_ID
INNER JOIN GRADE ON SIGNUP.ID = GRADE.SIGNUP_ID
WHERE GRADE.ELP = 'E'
GROUP BY DEPARTMENT.ID, DEPARTMENT.FACULTY
HAVING COUNT(*) >= 10 AND MAX(GRADE.VALUE) = 10

-- F
SELECT UPPER(STUDENT.NAME) || ' ' || STUDENT.SURNAME, COURSE.NAME, COURSE.ID,
    MAX(CASE WHEN GRADE.ELP = 'E' THEN GRADE.VALUE END) AS EXAM_GRADE,
    AVG(CASE WHEN GRADE.ELP = 'L' THEN GRADE.VALUE WHEN GRADE.ELP = 'P' THEN GRADE.VALUE END) AS ACTIVITY_GRADE,
    (2 * AVG(CASE WHEN GRADE.ELP = 'E' THEN GRADE.VALUE END)
    + AVG(CASE WHEN GRADE.ELP = 'L' THEN GRADE.VALUE WHEN GRADE.ELP = 'P' THEN GRADE.VALUE END)) / 3 AS FINAL_GRADE
FROM STUDENT
INNER JOIN SIGNUP ON STUDENT.ID = SIGNUP.STUDENT_ID
INNER JOIN GRADE ON SIGNUP.ID = GRADE.SIGNUP_ID
INNER JOIN COURSE ON SIGNUP.COURSE_ID = COURSE.ID
GROUP BY STUDENT.NAME, STUDENT.SURNAME, COURSE.NAME, COURSE.ID
HAVING (2 * MAX(CASE WHEN GRADE.ELP = 'E' THEN GRADE.VALUE END)
        + AVG(CASE WHEN GRADE.ELP = 'L' THEN GRADE.VALUE WHEN GRADE.ELP = 'P' THEN GRADE.VALUE END)) / 3 >= 5