-- 1
-- A
SELECT DISTINCT STUDENT.ID, STUDENT.NAME, STUDENT.SURNAME
FROM STUDENT
INNER JOIN SIGNUP ON STUDENT.ID = SIGNUP.STUDENT_ID
INNER JOIN GRADE ON GRADE.SIGNUP_ID = SIGNUP.ID
WHERE GRADE.VALUE < 7

-- B
SELECT STUDENT.ID, STUDENT.NAME, STUDENT.SURNAME
FROM STUDENT
WHERE STUDENT.ID IN (
    SELECT SIGNUP.STUDENT_ID
    FROM SIGNUP
    WHERE SIGNUP.ID IN (
        SELECT GRADE.SIGNUP_ID
        FROM GRADE
        WHERE GRADE.VALUE < 7
    )
)

-- C
SELECT STUDENT.ID, STUDENT.NAME, STUDENT.SURNAME
FROM STUDENT
INNER JOIN SIGNUP ON STUDENT.ID = SIGNUP.STUDENT_ID
INNER JOIN GRADE ON GRADE.SIGNUP_ID = SIGNUP.ID
GROUP BY STUDENT.ID, STUDENT.NAME, STUDENT.SURNAME
HAVING MIN(GRADE.VALUE) < 7

-- D
SELECT STUDENT.ID, STUDENT.NAME, STUDENT.SURNAME
FROM STUDENT
INNER JOIN SIGNUP ON STUDENT.ID = SIGNUP.STUDENT_ID
INNER JOIN GRADE ON GRADE.SIGNUP_ID = SIGNUP.ID
MINUS
SELECT STUDENT.ID, STUDENT.NAME, STUDENT.SURNAME
FROM STUDENT
INNER JOIN SIGNUP ON STUDENT.ID = SIGNUP.STUDENT_ID
INNER JOIN GRADE ON GRADE.SIGNUP_ID = SIGNUP.ID
GROUP BY STUDENT.ID, STUDENT.NAME, STUDENT.SURNAME
HAVING MIN(GRADE.VALUE) >= 7


-- 2
SELECT STUDENT.ID
FROM STUDENT
INNER JOIN SIGNUP ON STUDENT.ID = SIGNUP.STUDENT_ID
INNER JOIN GRADE ON GRADE.SIGNUP_ID = SIGNUP.ID
GROUP BY STUDENT.ID
HAVING (MIN(GRADE.VALUE) < 5 OR MAX(GRADE.VALUE) = 10)
MINUS
SELECT STUDENT.ID
FROM STUDENT
INNER JOIN SIGNUP ON STUDENT.ID = SIGNUP.STUDENT_ID
INNER JOIN GRADE ON GRADE.SIGNUP_ID = SIGNUP.ID
GROUP BY STUDENT.ID
HAVING (MIN(GRADE.VALUE) < 5 AND MAX(GRADE.VALUE) = 10)


-- 3
SELECT COURSE.ID, COURSE.NAME, TEACHER.NAME || ' ' || TEACHER.SURNAME AS TEACHER
FROM COURSE
INNER JOIN TEACHER ON COURSE.TEACHER_ID = TEACHER.ID
INNER JOIN SIGNUP ON COURSE.ID = SIGNUP.COURSE_ID
INNER JOIN GRADE ON GRADE.SIGNUP_ID = SIGNUP.ID
GROUP BY COURSE.ID, COURSE.NAME, TEACHER.NAME, TEACHER.SURNAME
HAVING COUNT(CASE WHEN GRADE.ELP = 'E' AND GRADE.VALUE >= 5 THEN 1 END) > (
    SELECT COUNT(SIGNUP.ID) * 0.3
    FROM SIGNUP
    GROUP BY SIGNUP.COURSE_ID
    HAVING SIGNUP.COURSE_ID = COURSE.ID
)


-- 4
SELECT DEPARTMENT.FACULTY
FROM DEPARTMENT
GROUP BY DEPARTMENT.FACULTY
HAVING (
    SELECT COUNT(DISTINCT STUDENT.STUDY_YEAR)
    FROM STUDENT
    INNER JOIN SIGNUP ON STUDENT.ID = SIGNUP.STUDENT_ID
    INNER JOIN GRADE ON GRADE.SIGNUP_ID = SIGNUP.ID
    WHERE STUDENT.DEPARTMENT = DEPARTMENT.ID AND GRADE.VALUE = 10 AND GRADE.ELP = 'E'
    AND EXTRACT(YEAR FROM GRADE.GDATE) = EXTRACT(YEAR FROM SYSDATE)
) = 4


-- 5
SELECT STUDENT.ID, STUDENT.NAME, STUDENT.SURNAME, (
    SELECT 
        AVG((
            2 * MAX(CASE WHEN GRADE.ELP = 'E' THEN GRADE.VALUE END) + 
            AVG(CASE WHEN GRADE.ELP IN ('L', 'P') THEN GRADE.VALUE END)
        )/ 3)
    FROM GRADE
    INNER JOIN SIGNUP ON GRADE.SIGNUP_ID = SIGNUP.ID
    WHERE STUDENT.ID = SIGNUP.STUDENT_ID
    GROUP BY SIGNUP.ID
) AS "FINAL_GRADE"
FROM STUDENT
INNER JOIN SIGNUP ON STUDENT.ID = SIGNUP.STUDENT_ID
INNER JOIN GRADE ON SIGNUP.ID = GRADE.SIGNUP_ID
GROUP BY STUDENT.ID, STUDENT.NAME, STUDENT.SURNAME
HAVING (
    SELECT COUNT(DISTINCT SIGNUP.COURSE_ID) 
    FROM SIGNUP
    WHERE SIGNUP.STUDENT_ID = STUDENT.ID AND EXTRACT(YEAR FROM SIGNUP.YEAR) = EXTRACT(YEAR FROM SYSDATE)
) = (
    SELECT COUNT(DISTINCT SIGNUP.ID)
    FROM GRADE
    INNER JOIN SIGNUP ON GRADE.SIGNUP_ID = SIGNUP.ID
    WHERE STUDENT.ID = SIGNUP.STUDENT_ID AND EXTRACT(YEAR FROM SIGNUP.YEAR) = EXTRACT(YEAR FROM SYSDATE)
    GROUP BY SIGNUP.STUDENT_ID
    HAVING MAX(CASE WHEN GRADE.ELP = 'E' THEN GRADE.VALUE END) >= 5
    AND AVG(CASE WHEN GRADE.ELP IN ('L', 'P') THEN GRADE.VALUE END) >= 4.5
    AND COUNT(DISTINCT GRADE.ELP) = 3
)